{"version":3,"sources":["components/HomePage.js","components/AboutPage.js","components/common/Header.js","appDispatcher.js","actions/actionTypes.js","stores/courseStore.js","components/CourseList.js","api/apiUtils.js","api/courseApi.js","actions/courseActions.js","components/CoursesPage.js","components/NotFoundPage.js","components/common/TextInput.js","components/CourseForm.js","components/ManageCoursePage.js","components/App.js","index.js"],"names":["HomePage","className","to","AboutPage","props","state","React","Component","Header","activeStyle","color","backGroundColor","exact","dispatcher","Dispatcher","_courses","store","callback","this","on","removeListener","emit","slug","find","course","EventEmitter","register","action","actionType","actionTypes","push","emitChange","filter","id","parseInt","courses","CourseList","map","key","onClick","deleteCourse","toast","error","title","authorId","category","handleResponse","response","a","ok","json","status","text","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","getCourses","fetch","then","catch","saveCourse","method","headers","body","JSON","stringify","courseApi","savedCourse","dispatch","loadCourses","CoursesPage","useState","courseStore","setCourses","useEffect","addChangeListener","onChange","length","removeChangeListener","NotFoundPage","TextInput","wrapperClass","htmlFor","label","type","name","value","errors","defaultProps","CourseForm","onSubmit","ManageCoursePage","setErrors","setCourse","match","params","courseActions","getCourseBySlug","target","event","preventDefault","_errors","Object","keys","formIsValid","history","success","App","autoClose","hideProgressBar","path","component","from","render","document","getElementById"],"mappings":"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","file":"static/js/main.b83ff8ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h1>PluralSight Admin</h1>\r\n      <p>React, Flux, Bootstrap, and other miracles with lots of magic. </p>\r\n      <Link to=\"about\" className=\"btn btn-warning font-weight-bold\">\r\n        About\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","// import React from \"react\";\r\nimport React from \"react\";\r\n\r\nclass AboutPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>About Page</h2>\r\n        <p>This app uses React!!!</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const activeStyle = { color: \"orange\", backGroundColor: \"black\" };\r\n  // EXACT bardzo wazne\r\n  return (\r\n    <nav\r\n      className=\"\r\n    navbar-brand \r\n    bg-light\"\r\n    >\r\n      <NavLink\r\n        exact\r\n        className=\"btn btn-primary\"\r\n        activeStyle={activeStyle}\r\n        to=\"/\"\r\n      >\r\n        Home\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink\r\n        className=\"btn btn-success\"\r\n        activeStyle={activeStyle}\r\n        to=\"/courses\"\r\n      >\r\n        Courses\r\n      </NavLink>\r\n      {\" | \"}\r\n      <NavLink className=\"btn btn-info\" activeStyle={activeStyle} to=\"/about\">\r\n        About\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Dispatcher } from \"flux\";\r\nconst dispatcher = new Dispatcher();\r\n//only one for App\r\nexport default dispatcher;\r\n","//unikamy bledow typos - osobna lista bledow !!!\r\nexport default {\r\n  CREATE_COURSE: \"CREATE_COURSE\",\r\n  UPDATE_COURSE: \"UPDATE_COURSE\",\r\n  DELETE_COURSE: \"DELETE_COURSE\",\r\n  LOAD_COURSES: \"LOAD_COURSES\",\r\n};\r\n","import { EventEmitter } from \"events\";\r\nimport Dispatcher from \"../appDispatcher\";\r\nimport actionTypes from \"../actions/actionTypes\";\r\n// import { getCourses, getCourseBySlug } from \"../api/courseApi\";\r\n\r\nconst CHANGE_EVENT = \"change\";\r\nlet _courses = [];\r\n\r\nclass CourseStore extends EventEmitter {\r\n  addChangeListener(callback) {\r\n    this.on(CHANGE_EVENT, callback);\r\n  }\r\n\r\n  removeChangeListener(callback) {\r\n    this.removeListener(CHANGE_EVENT, callback);\r\n  }\r\n\r\n  emitChange() {\r\n    this.emit(CHANGE_EVENT);\r\n  }\r\n\r\n  getCourses() {\r\n    return _courses;\r\n  }\r\n\r\n  getCourseBySlug(slug) {\r\n    return _courses.find((course) => course.slug === slug);\r\n  }\r\n}\r\n\r\nconst store = new CourseStore();\r\n\r\nDispatcher.register((action) => {\r\n  switch (action.actionType) {\r\n    case actionTypes.CREATE_COURSE:\r\n      _courses.push(action.course);\r\n      //anytime the store changes, we need to call emitChange\r\n      store.emitChange();\r\n      break;\r\n    case actionTypes.UPDATE_COURSE:\r\n      \r\n      store.emitChange();\r\n      break;\r\n    case actionTypes.DELETE_COURSE:\r\n      //to moze byc string wiec dla bezpieczenstwa dajemy paseinta\r\n      _courses = _courses.filter(\r\n        (course) => course.id !== parseInt(action.id, 10)\r\n      );\r\n      store.emitChange();\r\n      break;\r\n    case actionTypes.LOAD_COURSES:\r\n      _courses = action.courses;\r\n      store.emitChange();\r\n      break;\r\n\r\n    default:\r\n    //nothing to do here\r\n  }\r\n});\r\n\r\n//mapowanie - tworzenie nowej tablicy!!!\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst CourseList = (props) => {\r\n  const RenderRow = (course) => (\r\n    <tr key={course.id}>\r\n      <td>\r\n        <button\r\n          // className=\"badge badge-danger\"\r\n          className=\"btn btn-outline-danger\"\r\n          onClick={() => {\r\n            props.deleteCourse(course.id);\r\n            toast.error(\"Great! Course deleted.\");\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <Link to={`/course/${course.slug}`}> {course.title}</Link>\r\n      </td>\r\n      <td>{course.authorId}</td>\r\n      <td>{course.category}</td>\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>&nbsp;</th>\r\n            <th>Title</th>\r\n            <th>Author ID</th>\r\n            <th>Category</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{props.courses.map(RenderRow)}</tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\n//walidaca propsow, dla typow props zaczynamy od malej litery\r\n// to tylko dla wersji develperskiej, testowanie\r\nCourseList.propTypes = {\r\n  deleteCourse: PropTypes.func.isRequired,\r\n  courses: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      authorId: PropTypes.number.isRequired,\r\n      category: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\n// CourseList.defaultProps = {\r\n//   courses: [],\r\n// };\r\n\r\nexport default CourseList;\r\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(courses => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n        return courses[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import dispatcher from \"../appDispatcher\";\r\nimport * as courseApi from \"../api/courseApi\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\n//cala funkcja ponizej to Action Creator\r\nexport function saveCourse(course) {\r\n  return courseApi.saveCourse(course).then((savedCourse) => {\r\n    //hej dispatcher, go tell all the stores that a course was just created\r\n    dispatcher.dispatch({\r\n      actionType: course.id\r\n        ? actionTypes.UPDATE_COURSE\r\n        : actionTypes.CREATE_COURSE,\r\n      course: savedCourse,\r\n    });\r\n  });\r\n}\r\n\r\nexport function loadCourses() {\r\n  return courseApi.getCourses().then((courses) => {\r\n    //hej dispatcher, go tell all the stores that a course was just created\r\n    dispatcher.dispatch({\r\n      actionType: actionTypes.LOAD_COURSES,\r\n      courses: courses,\r\n    });\r\n  });\r\n}\r\n\r\nexport function deleteCourse(id) {\r\n  return courseApi.getCourses(id).then(() => {\r\n    //hej dispatcher, go tell all the stores that we want to delete course id=...\r\n    dispatcher.dispatch({\r\n      actionType: actionTypes.DELETE_COURSE,\r\n      id: id,\r\n    });\r\n  });\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { getCourses } from \"../api/courseApi\";\r\nimport courseStore from \"../stores/courseStore\";\r\nimport CourseList from \"./CourseList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\r\n\r\nconst CoursesPage = () => {\r\n  const [courses, setCourses] = useState(courseStore.getCourses());\r\n\r\n  //   _courses to dane z api\r\n  // useEffect(() => {\r\n  //   getCourses().then((_courses) => setCourses(_courses));\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    courseStore.addChangeListener(onChange);\r\n    //loadCourses bierzemy z courseActions\r\n    //getCourses bierzemy z courseStore\r\n    if (courseStore.getCourses().length === 0) loadCourses();\r\n    return () => courseStore.removeChangeListener(onChange);\r\n    //cleanup on unmount\r\n  }, [courses.length]);\r\n\r\n  const onChange = () => {\r\n    setCourses(courseStore.getCourses());\r\n  };\r\n\r\n  //moja proba\r\n  // useEffect(() => {\r\n  //   async function fetchData() {\r\n  //     const _courses = getCourses()\r\n  //   setCourses(_courses)}\r\n  //     fetchData()}, []);\r\n\r\n  // useEffect(() => {\r\n  //   async function fetchData() {\r\n  //     // You can await here\r\n  //     const response = await MyAPI.getData(someId);\r\n  //     // ...\r\n  //   }\r\n  //   fetchData();\r\n  // }, [someId]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Courses for super heroes!</h2>\r\n      <Link className=\"btn btn-primary\" to=\"/course\">\r\n        Add Course\r\n      </Link>\r\n      <CourseList courses={courses} deleteCourse={deleteCourse} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoursesPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div>\r\n      <h2>Page not found!</h2>\r\n      <Link to=\"/\">Back to Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\n//reusable uniwersal component\r\nimport PropTypes from \"prop-types\";\r\n//reusable component, uzywany prze zludzi trzeba testowac propsy\r\n\r\nfunction TextInput(props) {\r\n  let wrapperClass = \"form-group\";\r\n  if (props.error && props.error.length > 0) {\r\n    wrapperClass += \"has error\";\r\n    // mozna uzyc npm classnames i latwiej i more slicker\r\n  }\r\n  return (\r\n    <div className={wrapperClass}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      <div className=\"field\">\r\n        <input\r\n          id={props.id}\r\n          type=\"text\"\r\n          onChange={props.onChange}\r\n          name={props.name}\r\n          className=\"form-control\"\r\n          value={props.value}\r\n        />\r\n      </div>\r\n      {/* walidacja */}\r\n      {props.errors && <div className=\"alert alert-danger\">{props.errors}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\n//propTypes - testowanie\r\nTextInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string,\r\n  error: PropTypes.string,\r\n};\r\n//propsy deafaultowe\r\nTextInput.defaultProps = {\r\n  error: \"\",\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\nimport TextInput from \"./common/TextInput\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CourseForm = (props) => {\r\n  // console.log(props);\r\n  //na formie dajemy handlera bo jest bardziej dostepny\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <TextInput\r\n        id=\"title\"\r\n        label=\"Title\"\r\n        onChange={props.onChange}\r\n        name=\"title\"\r\n        value={props.course.title}\r\n        errors={props.errors.title}\r\n      />\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"author\">Author</label>\r\n        <div className=\"field\">\r\n          <select\r\n            onChange={props.onChange}\r\n            id=\"author\"\r\n            name=\"authorId\"\r\n            className=\"form-control\"\r\n            // nie moze byc null if, null to pusty\r\n            value={props.course.authorId || \"\"}\r\n          >\r\n            <option value=\"\" />\r\n            <option value=\"1\">Misza Grishakishvili</option>\r\n            <option value=\"2\">Grisza Miszakishvili</option>\r\n          </select>\r\n        </div>\r\n        {props.errors.authorId && (\r\n          <div className=\"alert alert-danger\">{props.errors.authorId}</div>\r\n        )}\r\n      </div>\r\n\r\n      <TextInput\r\n        id=\"category\"\r\n        label=\"Category\"\r\n        name=\"category\"\r\n        onChange={props.onChange}\r\n        value={props.course.category}\r\n        errors={props.errors.category}\r\n      />\r\n\r\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n};\r\n\r\n//validacja propsow - dokumentuje oczekiwania componentu!!! wazna rzecz\r\nCourseForm.propTypes = {\r\n  course: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CourseForm;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { Prompt } from \"react-router-dom\";\r\nimport CourseForm from \"./CourseForm\";\r\nimport courseStore from \"../stores/courseStore\";\r\n\r\n// import * as courseApi from \"../api/courseApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as courseActions from \"../actions/courseActions\";\r\n\r\nconst ManageCoursePage = (props) => {\r\n  //zarzadzanie bledami\r\n  const [errors, setErrors] = useState({});\r\n  // trzeba zaladaowac kursy przed info ze slug'a\r\n  const [courses, setCourses] = useState(courseStore.getCourses());\r\n  const [course, setCourse] = useState({\r\n    id: null,\r\n    slug: \"\",\r\n    title: \"\",\r\n    authorId: \"\",\r\n    category: \"\",\r\n  });\r\n\r\n  //single changer - ale to bez sensu bo potrzebujemy uniwersalny\r\n  //   function handleTitleChange(event) {\r\n  //     const updatedCourse = { ...course, title: event.target.value };\r\n  //     setCourse(updatedCourse);\r\n  //   }\r\n\r\n  //   function handleChange(event) {\r\n  //     //computed property\r\n  //     const updatedCourse = {\r\n  //       ...course,\r\n  //       [event.target.name]: event.target.value,\r\n  //     };\r\n  //     setCourse(updatedCourse);\r\n  //   }\r\n\r\n  //\r\n  useEffect(() => {\r\n    //gdy courseStore change run onChange\r\n    courseStore.addChangeListener(onChange);\r\n\r\n    const slug = props.match.params.slug;\r\n    //from the path '/courses/:slug  - moze byc inna nazwa trzeba zmienic na roucie w app.js'\r\n    if (courses.length === 0) {\r\n      courseActions.loadCourses();\r\n    } else if (slug) {\r\n      //zwraca promis wiec then\r\n      //   courseApi.getCourseBySlug(slug).then((_course) => setCourse(_course));\r\n      setCourse(courseStore.getCourseBySlug(slug));\r\n    }\r\n    //useEffect takze jest uruchaiany jak unmount wiec, clean up\r\n    return () => courseStore.removeChangeListener(onChange);\r\n    //jesli cokolwiek sie zmieni w tej tablicy rerun useEffect!!!\r\n  }, [courses.length, props.match.params.slug]);\r\n\r\n  const onChange = () => {\r\n    setCourses(courseStore.getCourses());\r\n  };\r\n\r\n  function handleChange({ target }) {\r\n    //computed property\r\n    setCourse({\r\n      ...course,\r\n      [target.name]: target.value,\r\n    });\r\n  }\r\n\r\n  // validacja formularza\r\n  const formIsValid = () => {\r\n    // bledy dajemy w obiekty bo latwiej nimi operowac w formularzu, niz w tablicy, w propsach mozna przekazac!!!\r\n    const _errors = {};\r\n    if (!course.title) _errors.title = \"Title is rquired\";\r\n    if (!course.authorId) _errors.authorId = \"Author ID is rquired\";\r\n    if (!course.category) _errors.category = \"Category is rquired\";\r\n\r\n    setErrors(_errors);\r\n    //Form is valid if the errors object has no properties daje false:)\r\n    //ale return true jak dlugosc obiektu jest rowna 0\r\n    return Object.keys(_errors).length === 0;\r\n  };\r\n\r\n  //uaktualnienie bazy danych kursow\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    //validacja\r\n    if (!formIsValid()) return;\r\n\r\n    //funkcja importowana z courseAPi zwraca promise\r\n    // tutaj mozna uzyc redirect ale uzyjemy ruter history object\r\n    // courseApi.saveCourse(course).then(() => {\r\n    //   props.history.push(\"/courses\");\r\n\r\n    courseActions.saveCourse(course).then(() => {\r\n      props.history.push(\"/courses\");\r\n      toast.success(\"Congratulations! Course saved.\");\r\n    });\r\n  };\r\n\r\n  //   debugger;\r\n  //   console.log(props);\r\n  return (\r\n    <>\r\n      <h2>Manage Course</h2>\r\n      {/* <Prompt when={true} message=\"Are you sure you want to leave?\" /> */}\r\n      {/* {props.match.params.slug} */}\r\n      <CourseForm\r\n        errors={errors}\r\n        course={course}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageCoursePage;\r\n","import React from \"react\";\nimport HomePage from \"./HomePage\";\nimport AboutPage from \"./AboutPage\";\nimport Header from \"./common/Header\";\nimport CoursesPage from \"./CoursesPage\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport ManageCoursePage from \"./ManageCoursePage\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n// import { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  // function getPage() {\n  //   const route = window.location.pathname;\n  //   console.log(route);\n  //   if (route === \"/courses\") return <Courses />;\n  //   if (route === \"/about\") return <AboutPage />;\n  //   return <HomePage />;\n  // }\n  //   return (\n  //     <div className=\"container-fluid\">\n  //       <Header />\n  //       {/* {getPage()} */}\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div className=\"container-fluid\">\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/courses\" component={CoursesPage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/course/:slug\" component={ManageCoursePage} />\n        <Route path=\"/course/\" component={ManageCoursePage} />\n        <Redirect from=\"/about-page\" to=\"about\" />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n}\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { render } from \"react-dom\";\n// import HomePage from \"./components/HomePage\";\n// import AboutPage from \"./components/AboutPage\";\n// import \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./components/App\";\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n\nrender(\n  <>\n    <Router>\n      <App />\n    </Router>\n    ,\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}